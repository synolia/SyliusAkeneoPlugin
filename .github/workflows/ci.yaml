name: CI

on:
  push:
    branches: [master, develop]
    paths-ignore:
      - README.md
  pull_request:
    paths-ignore:
      - README.md

jobs:

  analysis:
    name: Analysis PHP ${{ matrix.php }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php: [7.3, 7.4]
        symfony: [4.4.*]

    env:
      APP_ENV: test

    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "${{ matrix.php }}"
          tools: symfony
          coverage: none

      - name: Composer - Get Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - uses: actions/cache@v1
        id: cache-composer
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: composer-php.${{ matrix.php }}-${{ github.sha }}
          restore-keys: composer-php.${{ matrix.php }}-

      - name: Composer - Create cache directory
        run: mkdir -p /home/runner/.composer/cache
        if: steps.cache-composer.outputs.cache-hit != 'true'

      - name: Composer - Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Composer - Github Auth
        run: composer config -g github-oauth.github.com ${{ github.token }}

      - name: Composer - Restrict Symfony version
        run: composer config extra.symfony.require "${{ matrix.symfony }}"

      - name: Composer - Update dependencies
        run: |
          composer req --no-update symfony/dependency-injection:v4.4.18
          composer update --no-progress
        id: end-of-setup

      - name: ECS - Run
        run: if [ -f ruleset/easy-coding-standard.yml ]; then vendor/bin/ecs check src/ tests/Behat/ --no-progress-bar -c ruleset/easy-coding-standard.yml ; else echo Ecs ruleset file does not exist, skipping step ; fi
        if: always() && steps.end-of-setup.outcome == 'success'

      - name: PHPStan - Run
        run: if [ -f ruleset/phpstan.neon ]; then vendor/bin/phpstan analyse -c ruleset/phpstan.neon src/ ; else echo PHPStan ruleset file does not exist, skipping step ; fi
        if: always() && steps.end-of-setup.outcome == 'success'

      - name: PHPSpec - Run
        run: if [ -f phpspec.yml.dist ]; then vendor/bin/phpspec run ; else echo PHPSpec config file does not exist, skipping step ; fi
        if: always() && steps.end-of-setup.outcome == 'success'

      - name: PHPMD - Run
        run: if [ -f ruleset/.php_md.xml ]; then vendor/bin/phpmd src ansi ruleset/.php_md.xml ; else echo PHPMD config file does not exist, skipping step ; fi
        if: always() && steps.end-of-setup.outcome == 'success'

      - name: GrumPHP - Run
        run: (test -f grumphp.yml && vendor/bin/grumphp run) || echo Grumphp ruleset file does not exist, skipping step
        if: always() && steps.end-of-setup.outcome == 'success'

      - name: Checks security issues - Run
        run: symfony security:check
        if: always() && steps.end-of-setup.outcome == 'success'

    services:
      mariadb:
        image: mariadb:latest
        ports:
          - 3306:3306
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: true

  sylius:
    name: PHPUnit-Behat (PHP ${{ matrix.php }} Sylius ${{ matrix.sylius }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: [7.3, 7.4]
        sylius: ['1.7.*', '1.8.*']
        symfony: [4.4.*]

    env:
      APP_ENV: test
      package-name: synolia/sylius-akeneo-plugin

    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "${{ matrix.php }}"
          ini-values: date.timezone=UTC
          extensions: intl
          tools: symfony
          coverage: none

      - uses: actions/checkout@v2
        with:
          path: plugin

      - uses: actions/cache@v1
        id: cache-composer
        with:
          path: /home/runner/.composer/cache
          key: composer-php.${{ matrix.php }}-sylius.${{ matrix.sylius }}-${{ github.sha }}
          restore-keys: composer-php.${{ matrix.php }}-sylius.${{ matrix.sylius }}-

      - name: Composer - Create cache directory
        run: mkdir -p /home/runner/.composer/cache
        if: steps.cache-composer.outputs.cache-hit != 'true'

      - name: Composer - Self Update
        run: sudo composer self-update --1
        if: matrix.sylius == '1.7.*'

      - name: Composer - Github Auth
        run: composer config -g github-oauth.github.com ${{ github.token }}

      - name: Composer - Install Sylius-Standard
        run: composer create-project --no-progress sylius/sylius-standard sylius "${{ matrix.sylius }}"

      - name: Composer - Add path repository
        working-directory: ./sylius
        run: |
          composer config repositories.plugin '{"type": "path", "url": "../plugin/"}'

      - name: Composer - Config
        working-directory: ./sylius
        run: |
          composer config extra.symfony.allow-contrib true
          composer config minimum-stability "dev"
          composer config prefer-stable true

      - name: Composer - Install plugin
        working-directory: ./sylius
        run: composer req "${{ env.package-name }}:*" --prefer-source  --no-scripts

      - name: Composer - Install mock-webserver
        working-directory: ./sylius
        run: composer req --dev donatj/mock-webserver:^2.1 --no-update

      - name: Composer - Restrict Symfony version
        working-directory: ./sylius
        run: composer config extra.symfony.require "${{ matrix.symfony }}"

      - name: Sylius - Update dependencies # need to update sylius version
        working-directory: ./sylius
        run: |
          composer req --no-update symfony/dependency-injection:v4.4.18
          composer update --no-progress --no-suggest --prefer-dist -n -o

      - name: Sylius - Config package
        working-directory: ./sylius
        run: |
          sed -i '/];/i\    Synolia\\SyliusAkeneoPlugin\\SynoliaSyliusAkeneoPlugin::class => ["all" => true],' config/bundles.php

      - name: Sylius - Get services from Plugin
        working-directory: ./sylius
        run: |
          cp vendor/${{ env.package-name }}/tests/Application/config/packages/akeneo.yaml config/packages/akeneo.yaml

      - name: Sylius - Get datas from Plugin
        working-directory: ./sylius
        run: |
          cp vendor/${{ env.package-name }}/tests/Application/config/packages/test/akeneo.yaml config/packages/test/akeneo.yaml
          cp vendor/${{ env.package-name }}/tests/Application/config/packages/test/sylius_fixtures.yaml config/packages/test/sylius_fixtures.yaml

      - name: Sylius - Get routes from Plugin
        working-directory: ./sylius
        run: cp vendor/${{ env.package-name }}/tests/Application/config/routes.yaml config/routes/akeneo.yaml

      - name: Sylius - Copy migration
        working-directory: ./sylius
        run: cp ../plugin/src/Migrations/* src/Migrations

      - name: Sylius - Migration config
        working-directory: ./sylius
        run: |
          echo '        'DoctrineMigrations': 'src/Migrations'' >> config/packages/doctrine_migrations.yaml
        if: matrix.sylius == '1.8.*' || matrix.sylius == 'dev-master'

      - name: Sylius - Get test services from Plugin
        working-directory: ./sylius
        run: cp vendor/${{ env.package-name }}/tests/Application/config/packages/test/akeneo.yaml config/packages/test/akeneo.yaml

      - name: Sylius - Set database config
        working-directory: ./sylius
        run: |
          echo 'DATABASE_URL=mysql://root:@127.0.0.1:3306/akeneo_plugin_%kernel.environment%?serverVersion=mariadb-10.4.11' >> .env

      - name: Sylius - Install
        working-directory: ./sylius
        run: php bin/console sylius:install -n -s default

      - name: Sylius - Assets
        working-directory: ./sylius
        run: yarn install && yarn build

      - name: Sylius - Change Namespace
        working-directory: ./sylius
        run: find src -type f -name '*.php' -exec sed -i 's#namespace Tests\\Application#namespace App#g' {} \;

      - name: Sylius - Cache clear
        working-directory: ./sylius
        run: php bin/console c:c

      - name: Mock-webserver - Configure
        working-directory: ./sylius
        run: echo -e "\nMOCK_SERVER_HOST=localhost\nMOCK_SERVER_PORT=8987\n" >> .env.test

      - name: PHPUnit - Install 8.5
        working-directory: ./sylius
        run: wget https://phar.phpunit.de/phpunit-8.5.phar

      - name: PHPUnit - Configure
        working-directory: ./sylius
        run: |
          cp vendor/${{ env.package-name }}/phpunit.xml.dist phpunit.xml
          sed -i "s#tests/Application/config/bootstrap.php#config/bootstrap.php#g" phpunit.xml
          sed -i "s#<directory>tests</directory>#<directory>./vendor/${{ env.package-name }}/tests/PHPUnit</directory>#g" phpunit.xml
          sed -i "s#/tests/Application/Kernel.php#src/Kernel.php#g" phpunit.xml

      - name: Behat - Config Suite
        working-directory: ./sylius
        run: |
          sed -i "s#vendor/sylius/sylius/src/Sylius/Behat/Resources/config/suites.yml#vendor/${{ env.package-name }}/tests/Behat/Resources/suites.yml#g" behat.yml.dist
          sed -i "s#vendor/sylius/sylius/features#vendor/${{ env.package-name }}/features#g" behat.yml.dist
          echo '    - { resource: "../vendor/${{ env.package-name }}/tests/Behat/Resources/services.xml" }' >> config/services_test.yaml

      - name: Output PHP version for Symfony CLI
        working-directory: ./sylius
        run: php -v | head -n 1 | awk '{ print $2 }' > .php-version

      - name: Install certificates
        working-directory: ./sylius
        run: symfony server:ca:install

      - name: Run Chrome headless
        working-directory: ./sylius
        run: google-chrome-stable --enable-automation --disable-background-networking --no-default-browser-check --no-first-run --disable-popup-blocking --disable-default-apps --allow-insecure-localhost --disable-translate --disable-extensions --no-sandbox --enable-features=Metal --headless --remote-debugging-port=9222 --window-size=2880,1800 --proxy-server='direct://' --proxy-bypass-list='*' https://127.0.0.1 > /dev/null 2>&1 &

      - name: Run webserver
        working-directory: ./sylius
        run: symfony server:start --port=8080 --dir=public --daemon
        id: end-of-setup-sylius

      - name: Doctrine Schema Validate - Run
        run: php tests/Application/bin/console doctrine:schema:validate --skip-sync
        if: always() && steps.end-of-setup.outcome == 'success'

      - name: PHPunit - Run
        working-directory: ./sylius
        run: php phpunit-8.5.phar
        if: always() && steps.end-of-setup.outcome == 'success'

      - name: Run behat
        working-directory: ./sylius
        run: vendor/bin/behat --strict --no-interaction -f progress || vendor/bin/behat --strict -vvv --no-interaction --rerun
        if: always() && steps.end-of-setup.outcome == 'success'

      - uses: actions/upload-artifact@v2.1.4
        if: failure()
        with:
          name: logs
          path: ./sylius/etc/build

    services:
      mariadb:
        image: mariadb:10.4.11
        ports:
          - 3306:3306
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3
