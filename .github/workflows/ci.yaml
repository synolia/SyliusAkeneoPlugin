name: CI

on:
  push:
    branches: [master]
    paths-ignore:
      - README.md
  pull_request:
    branches: [ master]
    paths-ignore:
      - README.md

jobs:

  php:
    name: PHP ${{ matrix.php }} ${{ matrix.prefer }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php: [7.3, 7.4]
        prefer:  ['--prefer-lowest', '']

    steps:
      - uses: actions/checkout@v2

      - name: PHP - Switch
        run: sudo update-alternatives --set php /usr/bin/php${{ matrix.php }}

      - name: Composer - Get Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - uses: actions/cache@v1
        id: cache-composer
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: composer-php.${{ matrix.php }}-prefer.${{ matrix.prefer }}-${{ github.sha }}
          restore-keys: composer-php.${{ matrix.php }}-prefer.${{ matrix.prefer }}-

      - name: Composer - Create cache directory
        run: mkdir -p /home/runner/.composer/cache
        if: steps.cache-composer.outputs.cache-hit != 'true'

      - name: Composer - Self Update
        run: sudo composer self-update

      - name: Composer - Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Composer - Github Auth
        run: composer config -g github-oauth.github.com ${{ github.token }}

      - name: Composer - Update dependencies
        run: composer update ${{ matrix.prefer }} --no-progress

      - name: ECS - Run
        run: if [ -f ruleset/easy-coding-standard.yml ]; then vendor/bin/ecs check src/ tests/Behat/ --no-progress-bar -c ruleset/easy-coding-standard.yml ; else echo Ecs ruleset file does not exist, skipping step ; fi

      - name: PHPStan - Run
        run: if [ -f ruleset/phpstan.neon ]; then vendor/bin/phpstan analyse -c ruleset/phpstan.neon src/ ; else echo PHPStan ruleset file does not exist, skipping step ; fi

      - name: PHPSpec - Run
        run: if [ -f phpspec.yml.dist ]; then vendor/bin/phpspec run ; else echo PHPSpec config file does not exist, skipping step ; fi

      - name: GrumPHP - Run
        run: (test -f grumphp.yml && vendor/bin/grumphp run) || echo Grumphp ruleset file does not exist, skipping step

      - name: Doctrine Schema Validate - Run
        if: matrix.prefer == ''
        run: php tests/Application/bin/console doctrine:schema:validate --skip-sync

      - name: Checks security issues - Run
        if: matrix.prefer == ''
        run: php tests/Application/bin/console security:check

  sylius:
    name: Behat (PHP ${{ matrix.php }} Sylius ${{ matrix.sylius }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: [7.3, 7.4]
        sylius: ['~1.7.0']

    env:
      APP_ENV: test
      package-name: synolia/sylius-akeneo-plugin

    steps:
      - name: PHP - Switch
        run: sudo update-alternatives --set php /usr/bin/php${{ matrix.php }} && php -v

      - name: PHP - Setup timezone
        run: |
          echo "date.timezone=UTC" >> /tmp/timezone.ini; \
          sudo mv /tmp/timezone.ini /etc/php/${{ matrix.php }}/cli/conf.d/timezone.ini

      - uses: actions/checkout@v2
        with:
          path: plugin

      - uses: actions/cache@v1
        id: cache-composer
        with:
          path: /home/runner/.composer/cache
          key: composer-php.${{ matrix.php }}-sylius.${{ matrix.sylius }}-${{ github.sha }}
          restore-keys: composer-php.${{ matrix.php }}-sylius.${{ matrix.sylius }}-

      - name: Composer - Create cache directory
        run: mkdir -p /home/runner/.composer/cache
        if: steps.cache-composer.outputs.cache-hit != 'true'

      - name: Composer - Self Update
        run: |
          mkdir -p /home/runner/.composer/
          sudo composer self-update

      - name: Composer - Github Auth
        run: composer config -g github-oauth.github.com ${{ github.token }}

      - name: Composer - Install Sylius-Standard
        run: composer create-project --no-progress sylius/sylius-standard sylius "${{ matrix.sylius }}"

      - name: Composer - Add path repository
        working-directory: ./sylius
        run: |
          composer config repositories.plugin '{"type": "path", "url": "../plugin/"}'

      - name: Composer - Config
        working-directory: ./sylius
        run: |
          composer config extra.symfony.allow-contrib true
          composer config minimum-stability "dev"
          composer config prefer-stable true

      - name: Composer - Install plugin
        working-directory: ./sylius
        run: composer req "${{ env.package-name }}:*" --prefer-source --no-scripts

      - name: Composer - Install mock-webserver
        working-directory: ./sylius
        run: composer req --dev donatj/mock-webserver:^2.1

      - name: Composer - Install PHPUnit 8.5
        working-directory: ./sylius
        run: wget https://phar.phpunit.de/phpunit-8.5.phar

      #TODO Remove after use Symfony Flex
      - name: Sylius - Config package
        working-directory: ./sylius
        run: |
          sed -i '/];/i\    Synolia\\SyliusAkeneoPlugin\\SynoliaSyliusAkeneoPlugin::class => ["all" => true],' config/bundles.php
          cat config/bundles.php

      #TODO Remove after use Symfony Flex
      - name: Sylius - Get services from Plugin
        working-directory: ./sylius
        run: cp vendor/${{ env.package-name }}/akeneo_services.yaml config/packages/akeneo.yaml

      - name: Sylius - Get routes from Plugin
        working-directory: ./sylius
        run: cp vendor/${{ env.package-name }}/tests/Application/config/routes.yaml config/routes/akeneo.yaml

      - name: Sylius - Get migrations from Plugin
        working-directory: ./sylius
        run: cp -R vendor/${{ env.package-name }}/src/Migrations/* src/Migrations

      - name: Sylius - Get test services from Plugin
        working-directory: ./sylius
        run: cp vendor/${{ env.package-name }}/tests/Application/config/packages/test/akeneo.yaml config/packages/test/akeneo.yaml

      - name: Sylius - Init database
        working-directory: ./sylius
        run: php bin/console doctrine:database:create --if-not-exists

      - name: Sylius - Update database schema
        working-directory: ./sylius
        run: php bin/console doctrine:migr:migr -n

      - name: Sylius - Install
        working-directory: ./sylius
        run: php bin/console sylius:install -n -s default

      - name: Sylius - Assets
        working-directory: ./sylius
        run: yarn install && yarn build

      - name: Sylius - Change Namespace
        working-directory: ./sylius
        run: find src -type f -name '*.php' -exec sed -i 's#namespace Tests\\Application#namespace App#g' {} \;

      - name: Sylius - Cache clear
        working-directory: ./sylius
        run: php bin/console c:c -e test

      - name: Mock-webserver - Configure
        working-directory: ./sylius
        run: echo -e "\nMOCK_SERVER_HOST=localhost\nMOCK_SERVER_PORT=8987\n" >> .env.test

      - name: PHPUnit - Configure
        working-directory: ./sylius
        run: |
            cp vendor/${{ env.package-name }}/phpunit.xml.dist phpunit.xml
            sed -i "s#tests/Application/config/bootstrap.php#config/bootstrap.php#g" phpunit.xml
            sed -i "s#<directory>tests</directory>#<directory>./vendor/${{ env.package-name }}</directory>#g" phpunit.xml
            sed -i "s#/tests/Application/Kernel.php#src/Kernel.php#g" phpunit.xml

      - name: PHPunit
        working-directory: ./sylius
        run: php phpunit-8.5.phar

      - name: Behat - Configure display
        working-directory: ./sylius
        run: |
          /sbin/start-stop-daemon --start --quiet --pidfile /tmp/xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac -screen 0 1680x1050x16
          export DISPLAY=:99

      - name: Behat - Download and configure ChromeDriver
        working-directory: ./sylius
        run: |
          if [ ! -f chromedriver ] || [ "$(chromedriver --version | grep -c 2.34)" = "0" ]; then
              curl http://chromedriver.storage.googleapis.com/2.34/chromedriver_linux64.zip > chromedriver.zip
              unzip chromedriver.zip
              chmod +x chromedriver
          fi

      - name: Behat - Run ChromeDriver
        working-directory: ./sylius
        run: chromedriver > /dev/null 2>&1 &

      - name: Behat - Download and configure Selenium
        working-directory: ./sylius
        run: |
          if [ ! -f selenium.jar ] || [ "$(java -jar selenium.jar --version | grep -c 3.4.0)" = "0" ]; then
              curl http://selenium-release.storage.googleapis.com/3.4/selenium-server-standalone-3.4.0.jar > selenium.jar
          fi

      - name: Behat - Run Selenium
        working-directory: ./sylius
        run: java -Dwebdriver.chrome.driver=chromedriver -jar selenium.jar > /dev/null 2>&1 &

      - name: Behat - Run webserver
        working-directory: ./sylius
        run: bin/console server:run 127.0.0.1:8080 --quiet > /dev/null 2>&1 &

      - name: Behat - Config Suite
        working-directory: ./sylius
        run: |
          sed -i "s#vendor/sylius/sylius/src/Sylius/Behat/Resources/config/suites.yml#vendor/${{ env.package-name }}/tests/Behat/Resources/suites.yml#g" behat.yml.dist
          sed -i "s#vendor/sylius/sylius/features#vendor/${{ env.package-name }}/features#g" behat.yml.dist
          echo '    - { resource: "../vendor/${{ env.package-name }}/tests/Behat/Resources/services.xml" }' >> config/services_test.yaml

      - name: Behat - Run Behat tests
        working-directory: ./sylius
        run: vendor/bin/behat --strict -vvv --no-interaction || vendor/bin/behat --strict -vvv --no-interaction --rerun

    services:
      mariadb:
        image: mariadb:latest
        ports:
          - 3306:3306
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
